module ALU(a,b,shamt,alu_func,alu_out,zero);
input [31:0]a;
input [31:0]b;
input [4:0]shamt;
input [2:0]alu_func;
output reg [31:0]alu_out;
output zero;
always @(*)begin
	case (alu_func)
	3'b000 : alu_out <= a+b;
	3'b001 : alu_out <= a-b;
	3'b010 : alu_out <= a>>shamt;
	3'b011 : alu_out <= a<<shamt;
	3'b100 : alu_out <= a|b;
	3'b101 : alu_out <= a&b;
	3'b110 : alu_out <= a^b;
	3'b111 : alu_out <= !(a|b);
	default : alu_out <= 1'b0;
	endcase
end
assign zero = alu_out == 0 ? 1 : 0;
endmodule
