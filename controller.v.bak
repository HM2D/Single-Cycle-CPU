module controlUnit (ALUOp, RegDst, RegWrite, ALUSrc, MemWrite,MemToReg, Branch, Jump, Op);
   input  [5:0] Op;
   output [1:0] ALUOp;
   output RegDst, RegWrite, ALUSrc, MemWrite, MemToReg,Branch, Jump;
   reg [1:0]  ALUOp;
   reg RegDst, RegWrite, ALUSrc, MemRead, MemWrite, MemToReg, Branch,Jump;

   always@(Op)
    begin
      case(Op)
         6'd0: begin //R-Type
            RegDst <= 1'b1;
            RegWrite <= 1'b1;
            ALUSrc <= 1'b0;
            MemWrite <= 1'b0;
            MemToReg <= 1'b0;
            Branch <= 1'b0;
            Jump <= 1'b0;
            ALUOp <= 2'b10;
          end
         6'b001001:begin //ADD Imm
            RegDst <= 1'b0;
            RegWrite <= 1'b1;
            ALUSrc <= 1'b1;
            MemWrite <= 1'b0;
            MemToReg <= 1'b0;
            Branch <= 1'b0;
            Jump <= 1'b0;
            ALUOp <= 2'b10;
          end
          6'b001100:begin //AND Imm
            RegDst <= 1'b0;
            RegWrite <= 1'b1;
            ALUSrc <= 1'b1;
            MemWrite <= 1'b0;
            MemToReg <= 1'b0;
            Branch <= 1'b0;
            Jump <= 1'b0;
            ALUOp <= 2'b10;
          end
        6'd4:begin //Branch
         RegDst <= 1'b0;
            RegWrite <= 1'b0;
            ALUSrc <= 1'b0;
            MemWrite <= 1'bz;
            MemToReg <= 1'b0;
            Branch <= 1'b1;
            Jump <= 1'b0;
            ALUOp <= 2'b01; 
        end
        6'd2:begin //JA
            RegDst <= 1'bz;
            RegWrite <= 1'bz;
            ALUSrc <= 1'bz;
            MemWrite <= 1'bz;
            MemToReg <= 1'bz;
            Branch <= 1'b0;
            Jump <= 1'b1;
            ALUOp <= 2'bzz;
          end
        6'b100011: begin //Load Word
            RegDst <= 1'b0;
            RegWrite <= 1'b1;
            ALUSrc <= 1'b1;
            MemWrite <= 1'b0;
            MemToReg <= 1'b1;
            Branch <= 1'b0;
            Jump <= 1'b0;
            ALUOp <= 2'b00;
          end
          6'b101011:begin //Save Word
            RegDst <= 1'b0;
            RegWrite <= 1'b0;
            ALUSrc <= 1'b1;
            MemWrite <= 1'b1;
            MemToReg <= 1'bz;
            Branch <= 1'b0;
            Jump <= 1'b0;
            ALUOp <= 2'b00;
        end  
         endcase
       end
         
      endmodule